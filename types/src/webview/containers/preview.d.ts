/// <reference types="react" />
import { Backlink, WebviewConfig } from '../../notebook';
declare const PreviewContainer: import("unstated-next").Container<{
    backlinks: Backlink[];
    backlinksElement: import("react").RefObject<HTMLDivElement>;
    bindAnchorElementsClickEvent: (anchorElements: Array<HTMLAnchorElement>) => void;
    clickSidebarTocButton: () => any;
    config: WebviewConfig;
    contextMenuId: string;
    enablePreviewZenMode: boolean;
    getHighlightElementLineRange: (highlightElement: HTMLElement) => number[] | null;
    hiddenPreviewElement: import("react").RefObject<HTMLDivElement>;
    highlightElement: HTMLElement | null;
    highlightElementBeingEdited: HTMLElement | null;
    isLoadingBacklinks: boolean;
    isLoadingPreview: boolean;
    isMobile: boolean;
    isMouseOverPreview: boolean;
    isPresentationMode: boolean;
    isRefreshingPreview: boolean;
    isVSCode: boolean;
    isVSCodeWebExtension: boolean;
    markdown: string;
    markdownEditorExpanded: boolean;
    postMessage: (command: string, args?: unknown[]) => void;
    previewElement: import("react").RefObject<HTMLDivElement>;
    previewSyncSource: () => void;
    refreshBacklinks: (forceRefreshingNotes?: boolean) => void;
    setHighlightElementBeingEdited: import("react").Dispatch<import("react").SetStateAction<HTMLElement | null>>;
    setIsMouseOverPreview: import("react").Dispatch<import("react").SetStateAction<boolean>>;
    setMarkdownEditorExpanded: import("react").Dispatch<import("react").SetStateAction<boolean>>;
    setShowBacklinks: import("react").Dispatch<import("react").SetStateAction<boolean>>;
    setShowImageHelper: import("react").Dispatch<import("react").SetStateAction<boolean>>;
    showBacklinks: boolean;
    showContextMenu: (params: Omit<import("react-contexify").ShowContextMenuParams<unknown>, "id"> & Partial<Pick<import("react-contexify").ShowContextMenuParams<unknown>, "id">>) => void;
    showImageHelper: boolean;
    showSidebarToc: boolean;
    sidebarTocElement: import("react").RefObject<HTMLDivElement>;
    sidebarTocHtml: string;
    sourceScheme: import("react").MutableRefObject<string>;
    sourceUri: import("react").MutableRefObject<string | undefined>;
    theme: "dark" | "light";
    zoomLevel: number;
}, void>;
export default PreviewContainer;
